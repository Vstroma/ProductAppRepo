{
	"info": {
		"_postman_id": "18d9e8df-6c6d-43b5-a299-f775e6ef4dd4",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33673023",
		"_collection_link": "https://www.postman.com/orbital-module-architect-47232944/workspace/postman-api-fundamentals-student-expert/collection/33673023-18d9e8df-6c6d-43b5-a299-f775e6ef4dd4?action=share&source=collection_link&creator=33673023"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"jsonData[0].Id\r",
							"\r",
							"pm.test(\"value of [0].Id to be 1\", () => {pm.expect(jsonData[0].Id).to.equal(1)});\r",
							"\r",
							"\r",
							"jsonData[1].Id\r",
							"\r",
							"pm.test(\"value of [1].Id to be 2\", () => {pm.expect(jsonData[1].Id).to.equal(2)});\r",
							"\r",
							"\r",
							"jsonData[2].Id\r",
							"\r",
							"pm.test(\"value of [2].Id to be 3\", () => {pm.expect(jsonData[2].Id).to.equal(3)});\r",
							"\r",
							"var status = pm.response.status;\r",
							"\r",
							"pm.test(\"value of status to be 200 OK\", () => {pm.expect(status).to.equal(\"OK\")});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44328/api/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44328",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "IDTesting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"value of [0].Name to be Potato Soup\", () => {pm.expect(jsonData[0].Name).to.equal(\"Potato Soup\")});\r",
							"\r",
							"pm.test(\"value of [0].Category to be Schmoceries\", () => {pm.expect(jsonData[0].Category).to.equal(\"Schmoceries\")});\r",
							"\r",
							"pm.test(\"value of [0].Price to be 42.0\", () => { pm.expect(jsonData[0].Price).to.equal(42.0) });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44328/api/products/id",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44328",
					"path": [
						"api",
						"products",
						"id"
					]
				}
			},
			"response": []
		}
	]
}